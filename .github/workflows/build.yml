name: build plugin

on: [push]

jobs:
  docker-push:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@master
      - name: publish
        uses: machine-learning-apps/gpr-docker-publish@master
        id: docker
        with:
          IMAGE_NAME: 'protoc-gen-java-leo'
          TAG: 'latest'
          DOCKERFILE_PATH: 'Dockerfile'
          BUILD_CONTEXT: '.'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-protoc:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v1
      - name: configure
        run: ./configure.sh
      - name: install protoc
        run: sudo cp -R ./protoc /usr/local
      - name: install
        run: |
          mkdir -p build
          cd build || exit
          cmake ..
          make
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: protoc-gen-java-leo-${{ matrix.os }}
          path: ./build/protoc-gen-java-leo  
  build-windows:
    #if: startsWith(github.ref, 'disabled')
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: configure
        run: |
          $latestProtocRelease = Get-Content fetch/protoc_release.txt -First 1
          $url="https://github.com/leohilbert/protobuf-compile/releases/download/$latestProtocRelease/protoc-$latestProtocRelease-windows.zip"
          Write-Output "Downloading $url"
          Invoke-WebRequest -uri $url -outfile protoc.zip
          Expand-Archive protoc.zip protoc
      - uses: ilammy/msvc-dev-cmd@v1
      - name: install
        run: |
          mkdir -p build
          cd build
          cmake -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=Release ..
          nmake
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: protoc-gen-java-leo-windows
          path: ./build/
  build-jar:
    needs: build-protoc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/download-artifact@v1
        with:
          name: protoc-gen-java-leo-ubuntu-latest
          path: ./build/
      - name: build jar
        run: |
          ./configure.sh
          chmod +x ./build/protoc-gen-java-leo
          sudo cp -R protoc/** /usr/local
          sudo ldconfig
          cd java
          mvn clean install
      - name: Upload jar artifact
        uses: actions/upload-artifact@v1
        with:
          name: protoc-gen-java-leo-jar
          path: ./java/target/protobuf-java-leo.jar  
      - name: deploy to maven
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cd java && mvn -B -e --settings settings.xml deploy